
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$first-color-0:rgb(183, 212, 255);
$first-color-1:#5e9bf6;
$first-color-2:#676f81;
$first-color-3:#58637a;
$first-color-4:#414a5f;
$second-color-1:white;
$second-color-2:#f5f6f8;
$second-color-3:#ebeced;

$third-color-1:black;

$custom-palette: (
  50 : $first-color-0,
  100: $first-color-1,
  200: $first-color-2,
  300: $first-color-3,
  400: $first-color-4,
  500: $first-color-1, // Primary color
  600: $second-color-1, // Accent color
  700: $second-color-2,
  800: $second-color-3,
  900: $third-color-1, // Dark color
  A100: $first-color-0,
  A200: $first-color-1,
  A400: $first-color-3,
  A700: $third-color-1,
  contrast: (
    50: $third-color-1,
    100: $third-color-1,
    200: $third-color-1,
    300: $third-color-1,
    400: $third-color-1,
    500: $second-color-3,
    600: $second-color-3,
    700: $second-color-3,
    800: $second-color-3,
    900: $second-color-3,
    A100: $third-color-1,
    A200: $third-color-1,
    A400: $third-color-1,
    A700: $second-color-3,
  )
);

// Define your custom theme using the palette
$custom-theme: mat.define-palette($custom-palette,800,700,900);

$Clusterization-primary: mat.define-palette(mat.$indigo-palette);
$Clusterization-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$Clusterization-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$Clusterization-theme: mat.define-light-theme((
  color: (
    primary: $custom-theme,
    accent: $custom-theme,
    warn: $custom-theme,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($Clusterization-theme);

